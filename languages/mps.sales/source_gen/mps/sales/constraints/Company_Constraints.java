package mps.sales.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class Company_Constraints extends BaseConstraintsDescriptor {
  public Company_Constraints() {
    super(CONCEPTS.Company$mn);
  }

  public static class Codice_Property extends BasePropertyConstraintsDescriptor {
    public Codice_Property(ConstraintsDescriptor container) {
      super(PROPS.codice$GILA, container, true, true, false);
    }
    @Override
    public Object getValue(SNode node) {
      return SPropertyOperations.getString(node, PROPS.codice$GILA);
    }
    @Override
    public void setPropertyValue(SNode node, Object propertyValue) {
      staticSetPropertyValue(node, SPropertyOperations.castString(propertyValue));
    }
    private static void staticSetPropertyValue(SNode node, String propertyValue) {
      SPropertyOperations.assign(node, PROPS.codice$GILA, propertyValue);
    }
  }
  @Override
  protected Map<SProperty, PropertyConstraintsDescriptor> getSpecifiedProperties() {
    Map<SProperty, PropertyConstraintsDescriptor> properties = new HashMap<SProperty, PropertyConstraintsDescriptor>();
    properties.put(PROPS.codice$GILA, new Codice_Property(this));
    return properties;
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Company$mn = MetaAdapterFactory.getConcept(0xd2c82ff21fca47a9L, 0x9cebb491a324c870L, 0x74c6770040fbc5dcL, "mps.sales.structure.Company");
  }

  private static final class PROPS {
    /*package*/ static final SProperty codice$GILA = MetaAdapterFactory.getProperty(0xd2c82ff21fca47a9L, 0x9cebb491a324c870L, 0x74c6770040fbc5dcL, 0x74c6770040fd2b69L, "codice");
  }
}
