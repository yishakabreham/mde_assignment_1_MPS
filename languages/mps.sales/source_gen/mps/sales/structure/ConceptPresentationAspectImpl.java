package mps.sales.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_AdditionalCharge;
  private ConceptPresentation props_Address;
  private ConceptPresentation props_CashSales;
  private ConceptPresentation props_City;
  private ConceptPresentation props_Company;
  private ConceptPresentation props_Country;
  private ConceptPresentation props_CreditSales;
  private ConceptPresentation props_Discount;
  private ConceptPresentation props_Item;
  private ConceptPresentation props_LineItem;
  private ConceptPresentation props_Street;
  private ConceptPresentation props_Telephone;
  private ConceptPresentation props_Transaction;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.AdditionalCharge:
        if (props_AdditionalCharge == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("AdditionalCharge");
          props_AdditionalCharge = cpb.create();
        }
        return props_AdditionalCharge;
      case LanguageConceptSwitch.Address:
        if (props_Address == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Address = cpb.create();
        }
        return props_Address;
      case LanguageConceptSwitch.CashSales:
        if (props_CashSales == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("cash sales");
          props_CashSales = cpb.create();
        }
        return props_CashSales;
      case LanguageConceptSwitch.City:
        if (props_City == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("city");
          props_City = cpb.create();
        }
        return props_City;
      case LanguageConceptSwitch.Company:
        if (props_Company == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Company = cpb.create();
        }
        return props_Company;
      case LanguageConceptSwitch.Country:
        if (props_Country == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("country");
          props_Country = cpb.create();
        }
        return props_Country;
      case LanguageConceptSwitch.CreditSales:
        if (props_CreditSales == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("credit sales");
          props_CreditSales = cpb.create();
        }
        return props_CreditSales;
      case LanguageConceptSwitch.Discount:
        if (props_Discount == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Discount");
          props_Discount = cpb.create();
        }
        return props_Discount;
      case LanguageConceptSwitch.Item:
        if (props_Item == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Item = cpb.create();
        }
        return props_Item;
      case LanguageConceptSwitch.LineItem:
        if (props_LineItem == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("LineItem");
          props_LineItem = cpb.create();
        }
        return props_LineItem;
      case LanguageConceptSwitch.Street:
        if (props_Street == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("street");
          props_Street = cpb.create();
        }
        return props_Street;
      case LanguageConceptSwitch.Telephone:
        if (props_Telephone == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("telephone");
          props_Telephone = cpb.create();
        }
        return props_Telephone;
      case LanguageConceptSwitch.Transaction:
        if (props_Transaction == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Transaction = cpb.create();
        }
        return props_Transaction;
    }
    return null;
  }
}
